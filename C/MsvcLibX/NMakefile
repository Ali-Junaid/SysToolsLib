###############################################################################
#									      #
#   File name	    NMakefile						      #
#									      #
#   Description     An NMake file for making all MsvcLibX library	      #
#									      #
#   Notes	    make.bat looks for a default nmake file called NMakeFile. #
#									      #
#   History								      #
#    2016-10-05 JFL jf.larvoire@hpe.com created this file.                    #
#    2016-10-11 JFL Adapted for use with make files in the global include dir.#
#    2016-10-13 JFL Added target cleanenv.                                    #
#    2016-11-02 JFL Use macro BATMAKE for recursive calls to make.bat.        #
#    2016-11-03 JFL Added target config.                                      #
#		    							      #
#         © Copyright 2016 Hewlett Packard Enterprise Development LP          #
# Licensed under the Apache 2.0 license - www.apache.org/licenses/LICENSE-2.0 #
###############################################################################

!IF DEFINED(MESSAGES)
!MESSAGE Started MsvcLibX/NMakefile in $(MAKEDIR) # Display this make file name
!ENDIF

MSG=>con echo		# Command for writing a progress message on the console
HEADLINE=$(MSG).&$(MSG)	# Output a blank line, then a message

SUBMAKE=$(MAKE) /$(MAKEFLAGS) /F NMakefile # Recursive call to this make file
BATMAKE=call $(BMAKE)	# Recursive call to the make.bat script
BATCONF=call $(BCONF)	# Recursive call to the configure.bat script

# Default goal: Build MsvcLibX in the src subdirectory
all: MsvcLibX

src MsvcLibX: NUL	# Build the module in dir src, using the current log file
    $(BATMAKE) -C src || echo.>con & exit /b &:# The echo. avoids a 5s delay in case of error. no idea why.

# Update the make system scripts in the src subdirectory
update_all updates: NUL
    $(SUBMAKE) "DIR=src" "FILE=configure.bat" update
    $(SUBMAKE) "DIR=src" "FILE=make.bat" update

update: $(DIR)\$(FILE)

$(DIR)\$(FILE): $(STINCLUDE)\$(FILE)
    if "$(FILE)"=="" $(MSG) Error: Must define FILE & exit 1 &:# Avoid catastrophies if invoked out of spec.
    $(MSG) Updating %CD%\$@
    copy /y $** $@ >NUL

# Erase all output files
clean mostlyclean distclean:
    $(BATMAKE) -C src $@
    -rd /S /Q lib	>NUL 2>&1
!IF DEFINED(OUTDIR)
    -rd /S /Q $(OUTDIR)	>NUL 2>&1
!ENDIF
    rem # Delete temporary files 
    -for /f "delims=" %f in ('dir /b /s *~ *.bak #*# 2^>NUL') do @del "%f"
    rem # Delete files built by this nmakefile
    -for /f "delims=" %f in ('dir /b /s *.zip *.log 2^>NUL') do @del "%f"
    -if "$@"=="distclean" del /Q config.*.bat >NUL 2>&1

# Output the default goal name for make.bat
goal_name:
    echo MsvcLibX

# Erase all global environment variables created by this build
VARS=
cleanenv:
    $(BATMAKE) -C src $@ 2>NUL &:# Recursively run in sub-project directories

# Other common goals
dist zip:
    $(BATMAKE) -C src $@ &:# Recursively run in the src subdirectory

# Run the configure script in every subdirectory
config:
    cd src
    $(BATCONF)    || exit /b	&:# Force running configure.bat again in the src subdirectory
    $(BATMAKE) $@ || exit /b	&:# Recursively run make.bat in the src subdirectory

# Display a help screen
help:
    type <<
Nmake definitions:       (Definition must be quoted if it contains spaces)
  FILE=filename          Which file to update. Used by target update

Targets:
  all                    Build all MsvcLibX library versions (default)
  clean                  Delete all files built here, and all backup files
  distclean              Do a clean, then delete config.*.bat files
  update                 Update one file in src, defined by the FILE variables
  updates                Update all make scripts in directory src
  zip                    Build an MsvcLibX.zip source archive. Requires 7-zip.
<<
    make -L -C src help

