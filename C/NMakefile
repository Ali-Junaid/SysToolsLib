###############################################################################
#									      #
#   File name	    NMakefile						      #
#									      #
#   Description     An NMake file for making all SysToolLib libs & programs   #
#									      #
#   Notes	    make.bat looks for a default nmake file called NMakeFile. #
#									      #
#   History								      #
#    2016-10-05 JFL jf.larvoire@hpe.com created this file.                    #
#    2016-10-11 JFL Adapted for use with make files in the global include dir.#
#    2016-10-13 JFL Added targets cleanenv and release.                       #
#    2016-10-14 JFL Fixed bugs in the inline release script.                  #
#		    							      #
#         © Copyright 2016 Hewlett Packard Enterprise Development LP          #
# Licensed under the Apache 2.0 license - www.apache.org/licenses/LICENSE-2.0 #
###############################################################################

!IF DEFINED(MESSAGES)
!MESSAGE Started C/NMakefile in $(MAKEDIR) # Display this make file name
!ENDIF

MSG=>con echo		# Command for writing a progress message on the console
HEADLINE=$(MSG).&$(MSG)	# Output a blank line, then a message

SUBMAKE=$(MAKE) /$(MAKEFLAGS) /F NMakefile # Recursive call to this make file

# Check which subdirectories exist, and rebuild each in the correct order
!IF !DEFINED(DIRS)
!IF EXIST("BiosLib") && DEFINED(DOS_CC)
DIRS=$(DIRS) BiosLib 
!ENDIF
!IF EXIST("LoDosLib") && DEFINED(DOS_CC)
DIRS=$(DIRS) LoDosLib 
!ENDIF
!IF EXIST("PModeLib") && DEFINED(DOS_CC)
DIRS=$(DIRS) PModeLib 
!ENDIF
!IF EXIST("MsvcLibX")
DIRS=$(DIRS) MsvcLibX 
!ENDIF
!IF EXIST("SysLib")
DIRS=$(DIRS) SysLib 
!ENDIF
!IF EXIST("SRC")
DIRS=$(DIRS) SRC
!ENDIF
!ENDIF # !DEFINED(DIRS)

# Default goal: Generate all versions
all: $(DIRS)

# Build an individual module
BiosLib LoDosLib PModeLib MsvcLibX SysLib SRC: NUL
    :# $(SUBMAKE) "DIR=$@" updates &:# Update the make scripts
    make.bat -C $@ -L & if errorlevel 1 exit /b &:# Build the module in dir $@, using the current log file 

# Update the make system scripts in sub-directories
update_all:
    for %%f in ($(DIRS)) do @$(SUBMAKE) "DIR=%%f" updates

updates: NUL
    $(SUBMAKE) "DIR=$(DIR)" "FILE=configure.bat" update
    $(SUBMAKE) "DIR=$(DIR)" "FILE=make.bat" update

update: $(DIR)\$(FILE)

$(DIR)\$(FILE): $(STINCLUDE)\$(FILE)
    if "$(FILE)"=="" $(MSG) Error: Must define DIR ^& FILE & exit 1 &:# Avoid catastrophies if invoked out of spec.
    $(MSG) Updating %CD%\$@
    copy /y $** $@ >NUL

# Erase all output files
clean mostlyclean distclean:
    :# for %%f in ($(DIRS)) do @$(SUBMAKE) "DIR=%%f" updates & make.bat -L -C %%f $@ & if errorlevel 1 exit /b
    for %%f in ($(DIRS)) do @make.bat -L -C %%f $@ & if errorlevel 1 exit /b
!IF DEFINED(OUTDIR)
    -rd /S /Q $(OUTDIR)	>NUL 2>&1
!ENDIF
    -del /Q *.bak	>NUL 2>&1
    -del /Q *~		>NUL 2>&1
    -del /Q *.log	>NUL 2>&1
    -if "$@"=="distclean" del /Q config.*.bat >NUL 2>&1

# Output the default goal name for make.bat
goal_name:
    echo Build

# Dummy target, to build a source archive
dist zip: NUL
    $(MSG) Building CSources.zip
    :# if exist SysLib.zip del SysLib.zip
    set PATH=$(PATH);C:\Program Files\7-zip
    :# 7z.exe a SysLib.zip *.txt *.bat *.mak nmakefile exe *.c *.h
    rem # Delete files that got dragged in by wild cards, but that we don't want in the source zip.
    :# 7z.exe d SysLib.zip config.bat config.*.bat
    $(MSG) TO DO: Implement this
    exit 1

# Erase all global environment variables created by this build
VARS=STINCLUDE		# Global environment variables generated here
cleanenv:
    -for %%f in ($(DIRS)) do @make.bat -L -C %%f $@ 2>NUL &:# Recursively run in sub-project directories
    %COMSPEC% /c <<"$(TMP)\cleanenv-$(PID).bat" &:# Delete variables created here
      @echo off
      if not "$(VARS)"=="" for %%v in ($(VARS)) do @(
	>>"$(TMP)\cleanenv-$(PID).lst" (echo %%v) &:# Pass the name back to make.bat, for deleting it in the current shell environment
	set "VALUE="
	for /f "tokens=1,3" %%a in ('reg query "HKCU\Environment" ^| findstr /i /b /r /c:" *%%v "') do set VALUE="%%b"
	if defined VALUE ( :# The global environment variable exists. Delete it, using its actual name with the correct case.
	  echo ~/%%v & :# Prefix with ~/ to distinguish global variables deleted here, from local variables deleted in make.bat
	  reg delete "HKCU\Environment" /v %%v /f >NUL
	)
      )
<<

# Create an MsvcLibX binary release
release:
    %COMSPEC% /c <<"$(TMP)\MsvcLibX-release-$(PID).bat"
	@echo off
	setlocal EnableExtensions EnableDelayedExpansion
	
	:# Set the output file name
	pushd .. & set "ZIP=!CD!\SysTools.zip" & popd
	
	:# Build the program list
	set "QUIET_MAKE=1" &:# Tell All.mak, etc, to skip low priority information messages
	%FOREACHLINE% %%f in ('make.bat -C SRC list_programs') do set "PROGRAMS=%%f"
	$(MSG) PROGRAMS = (!PROGRAMS!)
	if not defined PROGRAMS ($(MSG) Error: Can't get the programs list. & exit 1)
	
	:# List scripts from Scripts.lst
	pushd ..
	for %%l in (Bash Batch PowerShell Tcl) do (
	  set "%%l=:" &:# The list must not be empty, else the search will fail in the second part.
	  for /f "delims=" %%f in ('find /i "%%l\" ^<Scripts.lst') do (
	    echo From Scripts.lst: %%f
	    set %%l=!%%l! "%%~nxf"
	  )
	  :# Also add the libraries from ScriptLibs.lst, but only if not already defined in Scripts.lst.
	  for /f "delims=" %%f in ('find /i "%%l\" ^<ScriptLibs.lst') do (
	    echo From ScriptsLibs.lst: %%f
	    set "FOUND=" & for %%p in (!%%l!) do if %%p=="%%~nxf" set "FOUND=1"
	    if not defined FOUND set %%l=!%%l! "%%~nxf"
	  )
	  set "%%l=!%%l:~1!" &:# Remove the initial colon we put in at first
	  if defined %%l set "%%l=!%%l:~1!" & rem :# Remove the separator space added with each append
	  set "LIST=(!%%l!)"
	  $(MSG) %%l = !LIST!
	)
	popd
	
	:# Rebuild a new zip file
	set PATH=%PATH%;C:\Program Files\7-zip
	if exist "%ZIP%" del "%ZIP%"
	$(MSG) Creating "%ZIP%"

	:# Select the programs to use.
	for %%d in (WIN95 WINXP WIN32) do ( :# May be overriden by setting PROGRAMS_DIR before running make release.
	  if not defined PROGRAMS_DIR if exist SRC\%%d (
	    pushd SRC\%%d & set "PROGRAMS_DIR=!CD!" & popd
	  )
	)
	if not exist "%PROGRAMS_DIR%" ($(MSG) Error: Can't find the programs directory. & exit 1) &:# Also fails if it's not defined

	:# Add programs
	$(MSG) Adding programs from %PROGRAMS_DIR%
	pushd "%PROGRAMS_DIR%"
	7z.exe -- a "%ZIP%" !PROGRAMS!
	popd
	
	:# Add scripts for each language
	for %%l in (Bash Batch PowerShell Tcl) do if defined %%l (
	  pushd ..\%%l
	  $(MSG) Adding %%l scripts from !CD!
	  7z.exe -- a "%ZIP%" !%%l!
	  popd
	)
	
	:# Add the doc files
	$(MSG) Adding README
	pushd ..\Docs
	7z.exe a "%ZIP%" Catalog.md
	7z.exe rn "%ZIP%" Catalog.md README.md
	popd
<<

# Display a help screen
help:
    type <<
Nmake definitions:       (Definition must be quoted if it contains spaces)
  DIRS=dir1 dir2 ...     Modules to work on. Default: all
  DIR=directory          Where to update files. Used by targets update & updates
  FILE=filename          Which file to update. Used by target update

Targets:
  all                    Build all available modules (default)
  clean                  Erase all output files in DIRS
  cleanenv               Erase all environment variables created by this build
  release                Create an MsvcLibX full release. Requires 7-Zip.
  update                 Update one file, defined by the DIR and FILE variables
  updates                Update all make scripts in directory DIR
  update_all             Update all make scripts in all directories
<<

